length(site5$Sample_Site_No.) * 100
box_data <- quantile(site5$Total_No._Colonies_AB_Neg, c(0, 0.25, 0.5, 0.75, 1))
names <- c("0th Percentile", "25th Percentile", "50th Percentile",
"75th Percentile", "100th Percentile")
quant_data <- data.frame(names, box_data)
View(quant_data)
View(quant_data)
View(sites)
View(quant_data)
require("knitr")
knitr::opts_chunk$set(echo = TRUE)
dest = "E:/Documents/GitHub/EBIO-R-Code/EBIO 3080/Lab/Week 6/Data"
opts_knit$set(root.dir = dest)
library(showtext)
library(ggplot2)
library(latex2exp)
library(reactable)
library(htmltools)
dest <- "C:/Users/Dylan/AppData/Local/Microsoft/Windows/Fonts"
font_add_google("Karla", "karla")
font_add("hkgroteskli", regular = file.path(dest, "HKGrotesk-LightItalic.ttf"))
font_add("hkgroteskr", regular = file.path(dest, "HKGrotesk-Regular.ttf"))
font_add("hkgroteskbo", regular = file.path(dest, "HKGrotesk-Bold.ttf"))
font_add("hel", regular = file.path(dest, "Helvetica.ttf"))
font_add("heli", regular = file.path(dest, "Helvetica-Oblique.ttf"))
sites <- read.csv("sites.csv", header = TRUE, sep = ",", fileEncoding = "UTF-8-BOM")
total_cols <- c("Total_AB_Neg", "Total_AB_Pos", "FABR")
colour_cols <- c("White_AB_Neg", "Light_Yellow_AB_Neg", "Dark_Yellow_AB_Neg",
"Pink_AB_Neg")
sitestbl <- sites[, c("Site", "Distance", total_cols, colour_cols)]
total_column <- function(maxWidth = 150, ...) {
colDef(maxWidth = maxWidth, align = "center", class = "cell number", ...)
}
colour_column <- function(maxWidth = 100, ...) {
colDef(maxWidth = maxWidth, class = "cell number", ...)
}
table1 <- reactable(
sitestbl,
pagination = FALSE,
defaultSorted = "Site",
defaultSortOrder = "asc",
defaultColGroup = colGroup(headerClass = "group-header"),
columnGroups = list(
colGroup(name = "Total Number of Colonies", columns = total_cols),
colGroup(name = paste("Number of ... Colonies in ",
"Antibiotic-Negative Plate"),
columns = colour_cols)
),
defaultColDef = colDef(class = "cell", headerClass = "header"),
columns = list(
Site = colDef(
name = "Site",
align = "left",
maxWidth = 50,
class = "cell number",
headerStyle = list(fontWeight = 700)
),
Distance = colDef(
name = "Distance from Site 1 (km)",
defaultSortOrder = "asc",
align = "center",
maxWidth = 120,
class = "cell number",
headerStyle = list(fontWeight = 700)
),
Total_AB_Neg = total_column(
name = "Antibiotic-Negative Plate"
),
Total_AB_Pos = total_column(
name = "Antibiotic-Positive Plate"
),
FABR = total_column(
name = "Relative Frequency of Antibiotic Resistance"
),
White_AB_Neg = colour_column(name = "White", maxWidth = 80),
Light_Yellow_AB_Neg = colour_column(name = "Light Yellow"),
Dark_Yellow_AB_Neg = colour_column(name = "Dark Yellow"),
Pink_AB_Neg = colour_column(name = "Pink", maxWidth = 50)
),
rowClass = JS("
function(rowInfo, state) {
const firstSorted = state.sorted[0]
if (firstSorted && firstSorted.id === 'group') {
const nextRow = state.pageRows[rowInfo.viewIndex + 1]
if (nextRow && rowInfo.row.group !== nextRow.group) {
return 'group-last'
}
}
}"
),
showSortIcon = FALSE,
borderless = TRUE,
class = "colonies-table"
)
div(class = "colonies",
div(class = "title",
h2("Classification of bacterial colonies in antibiotic-positive and -negative environments"),
"Observed for six sites along the Boulder Creek watershed"
),
table1
)
tags$link(href = "https://fonts.googleapis.com/css?family=Karla:400,700|Fira+Mono&display=fallback", rel = "stylesheet")
# Importing csv file
bacteria_data <- read.csv("sites.csv", header = TRUE, sep = ",",
fileEncoding = "UTF-8-BOM")
# FABR was calculated in the csv file, but the calculation would have been:
# bacteria_data$FABR <- bacteria_data$Total_AB_Pos/bacteria_data$Total_AB_Neg
# Calculating linear model parameters for FABR vs distance
linear_model <- lm(FABR ~ Distance, data = bacteria_data)
# Plotting
fig1 <- ggplot(bacteria_data, aes(x = Distance, y = FABR)) +
geom_point(size = 2, shape = 19) +
geom_smooth(method = "lm", formula = y ~ x) +
ggtitle("Relative Frequency of Antibiotic Resistance at Different Sites",
paste("For bacterial plates grown from bacteria collected at 6",
"sites across the Boulder Creek watershed")) +
xlab("Distance from Site 1 (km)") +
ylab("Relative Frequency of Antibiotic Resistance") +
theme(plot.title = element_text(color = "#2c3136", size = 20,
family = "karla"),
axis.title.x = element_text(color = "#2c3136", size = 13,
family = "karla",
face = "italic"),
axis.title.y = element_text(color = "#2c3136", size = 13,
family = "karla",
face = "italic"),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
print(fig1)
class_data <- read.csv("Lab06_plate.csv", header = TRUE)
site5 <- subset(class_data, Sample_Site_No. == 5)[4:5]
box_data <- quantile(site5$Total_No._Colonies_AB_Neg, c(0, 0.25, 0.5, 0.75, 1))
names <- c("per0", "per25", "per50",
"per75", "per100")
quant_data <- t(data.frame(names, box_data))
table2 <- reactable(
quant_data,
pagination = FALSE,
defaultColDef = colDef(class = "cell", headerClass = "header"),
columns = list(
per0 = colDef(
name = "0th Percentile",
headerStyle = list(fontWeight = 700)
),
per25 = colDef(
name = "25th Percentile",
headerStyle = list(fontWeight = 700)
),
per50 = colDef(
name = "50th Percentile",
headerStyle = list(fontWeight = 700)
),
per75 = colDef(
name = "75th Percentile",
headerStyle = list(fontWeight = 700)
),
per100 = colDef(
name = "100th Percentile",
headerStyle = list(fontWeight = 700)
),
),
showSortIcon = FALSE,
borderless = TRUE,
class = "colonies-table"
)
View(quant_data)
require("knitr")
knitr::opts_chunk$set(echo = TRUE)
dest = "E:/Documents/GitHub/EBIO-R-Code/EBIO 3080/Lab/Week 6/Data"
opts_knit$set(root.dir = dest)
library(showtext)
library(ggplot2)
library(latex2exp)
library(reactable)
library(htmltools)
dest <- "C:/Users/Dylan/AppData/Local/Microsoft/Windows/Fonts"
font_add_google("Karla", "karla")
require("knitr")
knitr::opts_chunk$set(echo = TRUE)
dest = "E:/Documents/GitHub/EBIO-R-Code/EBIO 3080/Lab/Week 6/Data"
opts_knit$set(root.dir = dest)
library(showtext)
library(ggplot2)
library(latex2exp)
library(reactable)
library(htmltools)
dest <- "C:/Users/Dylan/AppData/Local/Microsoft/Windows/Fonts"
font_add_google("Karla", "karla")
font_add("hkgroteskli", regular = file.path(dest, "HKGrotesk-LightItalic.ttf"))
font_add("hkgroteskr", regular = file.path(dest, "HKGrotesk-Regular.ttf"))
font_add("hkgroteskbo", regular = file.path(dest, "HKGrotesk-Bold.ttf"))
font_add("hel", regular = file.path(dest, "Helvetica.ttf"))
font_add("heli", regular = file.path(dest, "Helvetica-Oblique.ttf"))
sites <- read.csv("sites.csv", header = TRUE, sep = ",", fileEncoding = "UTF-8-BOM")
total_cols <- c("Total_AB_Neg", "Total_AB_Pos", "FABR")
colour_cols <- c("White_AB_Neg", "Light_Yellow_AB_Neg", "Dark_Yellow_AB_Neg",
"Pink_AB_Neg")
sitestbl <- sites[, c("Site", "Distance", total_cols, colour_cols)]
total_column <- function(maxWidth = 150, ...) {
colDef(maxWidth = maxWidth, align = "center", class = "cell number", ...)
}
colour_column <- function(maxWidth = 100, ...) {
colDef(maxWidth = maxWidth, class = "cell number", ...)
}
table1 <- reactable(
sitestbl,
pagination = FALSE,
defaultSorted = "Site",
defaultSortOrder = "asc",
defaultColGroup = colGroup(headerClass = "group-header"),
columnGroups = list(
colGroup(name = "Total Number of Colonies", columns = total_cols),
colGroup(name = paste("Number of ... Colonies in ",
"Antibiotic-Negative Plate"),
columns = colour_cols)
),
defaultColDef = colDef(class = "cell", headerClass = "header"),
columns = list(
Site = colDef(
name = "Site",
align = "left",
maxWidth = 50,
class = "cell number",
headerStyle = list(fontWeight = 700)
),
Distance = colDef(
name = "Distance from Site 1 (km)",
defaultSortOrder = "asc",
align = "center",
maxWidth = 120,
class = "cell number",
headerStyle = list(fontWeight = 700)
),
Total_AB_Neg = total_column(
name = "Antibiotic-Negative Plate"
),
Total_AB_Pos = total_column(
name = "Antibiotic-Positive Plate"
),
FABR = total_column(
name = "Relative Frequency of Antibiotic Resistance"
),
White_AB_Neg = colour_column(name = "White", maxWidth = 80),
Light_Yellow_AB_Neg = colour_column(name = "Light Yellow"),
Dark_Yellow_AB_Neg = colour_column(name = "Dark Yellow"),
Pink_AB_Neg = colour_column(name = "Pink", maxWidth = 50)
),
rowClass = JS("
function(rowInfo, state) {
const firstSorted = state.sorted[0]
if (firstSorted && firstSorted.id === 'group') {
const nextRow = state.pageRows[rowInfo.viewIndex + 1]
if (nextRow && rowInfo.row.group !== nextRow.group) {
return 'group-last'
}
}
}"
),
showSortIcon = FALSE,
borderless = TRUE,
class = "colonies-table"
)
div(class = "colonies",
div(class = "title",
h2("Classification of bacterial colonies in antibiotic-positive and -negative environments"),
"Observed for six sites along the Boulder Creek watershed"
),
table1
)
tags$link(href = "https://fonts.googleapis.com/css?family=Karla:400,700|Fira+Mono&display=fallback", rel = "stylesheet")
# Importing csv file
bacteria_data <- read.csv("sites.csv", header = TRUE, sep = ",",
fileEncoding = "UTF-8-BOM")
# FABR was calculated in the csv file, but the calculation would have been:
# bacteria_data$FABR <- bacteria_data$Total_AB_Pos/bacteria_data$Total_AB_Neg
# Calculating linear model parameters for FABR vs distance
linear_model <- lm(FABR ~ Distance, data = bacteria_data)
# Plotting
fig1 <- ggplot(bacteria_data, aes(x = Distance, y = FABR)) +
geom_point(size = 2, shape = 19) +
geom_smooth(method = "lm", formula = y ~ x) +
ggtitle("Relative Frequency of Antibiotic Resistance at Different Sites",
paste("For bacterial plates grown from bacteria collected at 6",
"sites across the Boulder Creek watershed")) +
xlab("Distance from Site 1 (km)") +
ylab("Relative Frequency of Antibiotic Resistance") +
theme(plot.title = element_text(color = "#2c3136", size = 20,
family = "karla"),
axis.title.x = element_text(color = "#2c3136", size = 13,
family = "karla",
face = "italic"),
axis.title.y = element_text(color = "#2c3136", size = 13,
family = "karla",
face = "italic"),
plot.margin = unit(c(0.5, 0.5, 0.5, 0.5), "cm"))
print(fig1)
class_data <- read.csv("Lab06_plate.csv", header = TRUE)
site5 <- subset(class_data, Sample_Site_No. == 5)[4:5]
box_data <- quantile(site5$Total_No._Colonies_AB_Neg, c(0, 0.25, 0.5, 0.75, 1))
names <- c("per0", "per25", "per50",
"per75", "per100")
quant_data <- data.frame(names, box_data)
table2 <- reactable(
quant_data,
pagination = FALSE,
defaultColDef = colDef(class = "cell", headerClass = "header"),
columns = list(
per0 = colDef(
name = "0th Percentile",
headerStyle = list(fontWeight = 700)
),
per25 = colDef(
name = "25th Percentile",
headerStyle = list(fontWeight = 700)
),
per50 = colDef(
name = "50th Percentile",
headerStyle = list(fontWeight = 700)
),
per75 = colDef(
name = "75th Percentile",
headerStyle = list(fontWeight = 700)
),
per100 = colDef(
name = "100th Percentile",
headerStyle = list(fontWeight = 700)
),
),
showSortIcon = FALSE,
borderless = TRUE,
class = "colonies-table"
)
View(sites)
View(quant_data)
View(quant_data)
View(sites)
class_data <- read.csv("Lab06_plate.csv", header = TRUE)
site5 <- subset(class_data, Sample_Site_No. == 5)[4:5]
box_data <- c((site5$Total_No._Colonies_AB_Neg, c(0, 0.25, 0.5, 0.75, 1)))
class_data <- read.csv("Lab06_plate.csv", header = TRUE)
site5 <- subset(class_data, Sample_Site_No. == 5)[4:5]
box_data <- c(quantile(site5$Total_No._Colonies_AB_Neg, c(0, 0.25, 0.5, 0.75, 1)))
names <- c("per0", "per25", "per50",
"per75", "per100")
quant_data <- data.frame(names, box_data)
table2 <- reactable(
quant_data,
pagination = FALSE,
defaultColDef = colDef(class = "cell", headerClass = "header"),
columns = list(
per0 = colDef(
name = "0th Percentile",
headerStyle = list(fontWeight = 700)
),
per25 = colDef(
name = "25th Percentile",
headerStyle = list(fontWeight = 700)
),
per50 = colDef(
name = "50th Percentile",
headerStyle = list(fontWeight = 700)
),
per75 = colDef(
name = "75th Percentile",
headerStyle = list(fontWeight = 700)
),
per100 = colDef(
name = "100th Percentile",
headerStyle = list(fontWeight = 700)
),
),
showSortIcon = FALSE,
borderless = TRUE,
class = "colonies-table"
)
class_data <- read.csv("Lab06_plate.csv", header = TRUE)
site5 <- subset(class_data, Sample_Site_No. == 5)[4:5]
box_data <- unname(quantile(site5$Total_No._Colonies_AB_Neg, c(0, 0.25, 0.5, 0.75, 1)))
names <- c("per0", "per25", "per50",
"per75", "per100")
quant_data <- data.frame(names, box_data)
table2 <- reactable(
quant_data,
pagination = FALSE,
defaultColDef = colDef(class = "cell", headerClass = "header"),
columns = list(
per0 = colDef(
name = "0th Percentile",
headerStyle = list(fontWeight = 700)
),
per25 = colDef(
name = "25th Percentile",
headerStyle = list(fontWeight = 700)
),
per50 = colDef(
name = "50th Percentile",
headerStyle = list(fontWeight = 700)
),
per75 = colDef(
name = "75th Percentile",
headerStyle = list(fontWeight = 700)
),
per100 = colDef(
name = "100th Percentile",
headerStyle = list(fontWeight = 700)
),
),
showSortIcon = FALSE,
borderless = TRUE,
class = "colonies-table"
)
View(quant_data)
class_data <- read.csv("Lab06_plate.csv", header = TRUE)
site5 <- subset(class_data, Sample_Site_No. == 5)[4:5]
box_data <- unname(quantile(site5$Total_No._Colonies_AB_Neg, c(0, 0.25, 0.5, 0.75, 1)))
per0 <- box_data[1]
per25 <- box_data[2]
per50 <- box_data[3]
per75 <- box_data[4]
per100 <- box_data[5]
quant_data <- data.frame(per0, per25, per50, per75, per100)
table2 <- reactable(
quant_data,
pagination = FALSE,
defaultColDef = colDef(class = "cell", headerClass = "header"),
columns = list(
per0 = colDef(
name = "0th Percentile",
headerStyle = list(fontWeight = 700)
),
per25 = colDef(
name = "25th Percentile",
headerStyle = list(fontWeight = 700)
),
per50 = colDef(
name = "50th Percentile",
headerStyle = list(fontWeight = 700)
),
per75 = colDef(
name = "75th Percentile",
headerStyle = list(fontWeight = 700)
),
per100 = colDef(
name = "100th Percentile",
headerStyle = list(fontWeight = 700)
),
),
showSortIcon = FALSE,
borderless = TRUE,
class = "colonies-table"
)
View(quant_data)
class_data <- read.csv("Lab06_plate.csv", header = TRUE)
site5 <- subset(class_data, Sample_Site_No. == 5)[4:5]
box_data <- unname(quantile(site5$Total_No._Colonies_AB_Neg, c(0, 0.25, 0.5, 0.75, 1)))
per0 <- box_data[1]
per25 <- box_data[2]
per50 <- box_data[3]
per75 <- box_data[4]
per100 <- box_data[5]
quant_data <- data.frame(per0, per25, per50, per75, per100)
table2 <- reactable(
quant_data,
pagination = FALSE,
defaultColDef = colDef(class = "cell", headerClass = "header"),
columns = list(
per0 = colDef(
name = "0th Percentile",
headerStyle = list(fontWeight = 700)
),
per25 = colDef(
name = "25th Percentile",
headerStyle = list(fontWeight = 700)
),
per50 = colDef(
name = "50th Percentile",
headerStyle = list(fontWeight = 700)
),
per75 = colDef(
name = "75th Percentile",
headerStyle = list(fontWeight = 700)
),
per100 = colDef(
name = "100th Percentile",
headerStyle = list(fontWeight = 700)
)
),
showSortIcon = FALSE,
borderless = TRUE,
class = "colonies-table"
)
div(class = "colonies",
div(class = "title",
h2("Quantile Data")
),
table2
)
View(site5)
View(sites)
sites <- read.csv("sites.csv", header = TRUE, sep = ",", fileEncoding = "UTF-8-BOM")
cols <- names(sites)[9]
sites[,(cols) := round(.SD, 1), .SDcols = cols]
sites <- read.csv("sites.csv", header = TRUE, sep = ",", fileEncoding = "UTF-8-BOM")
sites %>% mutate_at(vars(starts_with("FABR")), funs(round(., 1)))
library(dplyr)
sites <- read.csv("sites.csv", header = TRUE, sep = ",", fileEncoding = "UTF-8-BOM")
sites %>% mutate_at(vars(starts_with("FABR")), funs(round(., 1)))
View(sites)
sites$FABR <- round(sites$FABR, 1)
View(sites)
sites <- read.csv("sites.csv", header = TRUE, sep = ",", fileEncoding = "UTF-8-BOM")
sites$FABR <- round(sites$FABR, 3)
View(sites)
